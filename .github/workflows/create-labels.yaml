name: Create Custom Labels

on:
  workflow_dispatch:


jobs:
  create-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Create labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = [
              { name: 'goal: new-feature', color: '0E8A16', description: 'A new feature request or addition' },
              { name: 'priority: high', color: 'B60205', description: 'Needs to be addressed ASAP' },
              { name: 'documentation', color: '0075ca', description: 'Changes related to docs' },
              { name: 'bug', color: 'D73A4A', description: 'Something is broken' },
              { name: 'priority: medium', color: 'FBCA04', description: 'Moderate priority' },
              { name: 'chore', color: 'D4C5F9', description: 'Maintenance or routine tasks' },
              { name: 'goal: new-category', color: '1D76DB', description: 'Adding a new category' },
              { name: 'priority: low', color: 'C2E0C6', description: 'Low urgency' },
              { name: 'goal: new-link', color: 'A2EEEF', description: 'Creating or updating links' },
              { name: 'goal: build', color: '5319E7', description: 'Build system changes' },
              { name: 'goal: refactor', color: 'E99695', description: 'Code improvements without behavior change' },
              { name: 'accessibility', color: 'FEF2C0', description: 'Accessibility-related improvements' }
            ];

            for (const label of labels) {
              try {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                console.log(`Created label: ${label.name}`);
              } catch (error) {
                if (error.status === 422) {
                  // Label already exists, update it
                  await github.rest.issues.updateLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: label.name,
                    color: label.color,
                    description: label.description
                  });
                  console.log(`Updated label: ${label.name}`);
                } else {
                  throw error;
                }
              }
            }